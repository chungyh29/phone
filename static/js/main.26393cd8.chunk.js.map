{"version":3,"sources":["assets/floor_wood.jpg","components/Background.js","assets/cutePug.glb","components/CutePug.js","components/utils.js","assets/iphone.glb","components/Iphone.js","assets/wood.jpg","assets/ar_pets.svg","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Background","rot","pos","floor1","useLoader","THREE","floorWood","wrapS","wrapT","repeat","set","scene","useThree","color1","background","rotation","position","args","map","defaultProps","Math","PI","CutePug","props","group","useRef","useGLTF","obj","nodes","materials","ref","dispose","geometry","Mesh_1","material","material_13","Mesh_2","material_12","Mesh_3","material_11","Mesh_4","material_10","Mesh_5","material_9","Mesh_6","material_8","Mesh_7","material_7","Mesh_8","material_6","Mesh_9","material_5","Mesh_10","Mesh_11","Mesh_12","defaultMat_0","Mesh_13","defaultMat","Mesh_14","material_3","Mesh_15","material_2","Mesh_16","material_1","Mesh_17","material_0","Mesh_0","material_14","preload","getMouseDegrees","x","degreeLimit","dx","w","window","innerWidth","Model","mouse","cam","arobj","useState","isVisible","setIsVisible","hovered","setHovered","useSpring","from","emissiveVal","opacityVal","to","loop","reverse","iphone","gl","useMemo","format","stencilBuffer","target","useEffect","current","updateProjectionMatrix","timeOut","setTimeout","visible","clearTimeout","document","body","style","cursor","useFrame","setRenderTarget","render","degrees","yD","lerp","y","degToRad","moveARObj","onClick","e","stopPropagation","onPointerOver","onPointerOut","fov","aspect","near","far","scale","Cube001","attach","texture","opacity","metalness","roughness","meshStandardMaterial","transparent","emissive","Metallic","Mesh040","Mesh040_1","Mesh040_2","Cylinder_12_2","Extrude_5_3","Cap_2_7","Cylinder_12","Extrude_5_2","Cap_2_6","Extrude","Cap_1_3","Cap_2_3","Extrude_1","Cap_1_4","Cap_2_4","Mat","Extrude_5","Cap_1_2","Cap_2_2","Extrude_7","Cap_1","Cap_2","Extrude_1_2","Cap_2_10","Rounding_4","Cap_1_10","Extrude_2","Cap_1_5","Rounding","Cap_2_5","Extrude_2_2","Cap_2_11","Rounding_5","Cap_1_11","Extrude_3","Cap_2_9","Rounding_3","Cap_1_9","Extrude_4","Cap_1_8","Rounding_2","Cap_2_8","Sweep","TableLeg","textureMaterial","Table","inner","le","woodImg","offset","QRTexture","arQRCode","refMaterial","useResource","topXsection","moveTo","lineTo","absarc","bevelEnabled","steps","depth","index","App","active","setActive","MoveCamera","dummy","state","camera","lookAt","onMouseMove","clientX","clientY","getMousePos","intensity","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.26393cd8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/floor_wood.b86cb6dc.jpg\";","import React from 'react'\r\nimport * as THREE from 'three'\r\nimport {useLoader, useThree} from 'react-three-fiber'\r\nimport floorWood from '../assets/floor_wood.jpg'\r\n\r\n\r\nconst Background = ({rot,pos}) => {\r\n\r\n  const floor1 = useLoader(THREE.TextureLoader, floorWood)\r\n\r\n  if(floor1){\r\n      floor1.wrapS = THREE.RepeatWrapping;\r\n      floor1.wrapT = THREE.RepeatWrapping;\r\n      // floor1.offset.set(5, 5);\r\n      floor1.repeat.set(0.2, 3.5);\r\n  }\r\n  const{scene} = useThree();\r\n  const color1 = new THREE.Color('rgb(0,162,232)')\r\n  scene.background = color1;\r\n\r\n  return ( \r\n    <>\r\n      <mesh rotation={rot} position={pos}>\r\n        <planeGeometry args={[65,30]}/>\r\n        <meshStandardMaterial map={floor1}/>\r\n      </mesh>\r\n    </>\r\n  )\r\n}\r\n\r\nBackground.defaultProps = {\r\n  rot: [-Math.PI/2,0,0],\r\n  pos: [0,0,0]\r\n}\r\n\r\nexport default Background\r\n","export default __webpack_public_path__ + \"static/media/cutePug.37ee3dfa.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei/core/useGLTF'\nimport obj from '../assets/cutePug.glb'\n\nexport default function CutePug(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF(obj)\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group rotation={[-Math.PI / 2, 0, 0]}>\n        <mesh geometry={nodes.Mesh_1.geometry} material={materials.material_13} />\n        <mesh geometry={nodes.Mesh_2.geometry} material={materials.material_12} />\n        <mesh geometry={nodes.Mesh_3.geometry} material={materials.material_11} />\n        <mesh geometry={nodes.Mesh_4.geometry} material={materials.material_10} />\n        <mesh geometry={nodes.Mesh_5.geometry} material={materials.material_9} />\n        <mesh geometry={nodes.Mesh_6.geometry} material={materials.material_8} />\n        <mesh geometry={nodes.Mesh_7.geometry} material={materials.material_7} />\n        <mesh geometry={nodes.Mesh_8.geometry} material={materials.material_6} />\n        <mesh geometry={nodes.Mesh_9.geometry} material={materials.material_5} />\n        <mesh geometry={nodes.Mesh_10.geometry} material={nodes.Mesh_10.material} />\n        <mesh geometry={nodes.Mesh_11.geometry} material={nodes.Mesh_11.material} />\n        <mesh geometry={nodes.Mesh_12.geometry} material={materials.defaultMat_0} />\n        <mesh geometry={nodes.Mesh_13.geometry} material={materials.defaultMat} />\n        <mesh geometry={nodes.Mesh_14.geometry} material={materials.material_3} />\n        <mesh geometry={nodes.Mesh_15.geometry} material={materials.material_2} />\n        <mesh geometry={nodes.Mesh_16.geometry} material={materials.material_1} />\n        <mesh geometry={nodes.Mesh_17.geometry} material={materials.material_0} />\n        <mesh geometry={nodes.Mesh_0.geometry} material={materials.material_14} />\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload(obj)\n","\r\n\r\nexport const getMousePos = (e) => {\r\n  return ({x:e.clientX, y:e.clientY })\r\n}\r\n\r\nexport const getMouseDegrees = (x,degreeLimit) => {\r\n  let dx = 0,\r\n      xdiff,\r\n      xPercentage\r\n\r\n   let w = {x:window.innerWidth}\r\n\r\n  //ARObject rotates between 0 and (-)degreeLimit\r\n\r\n  //Cursor on left side of screen\r\n  if (x <= w.x/2) {\r\n    xdiff = w.x/2 - x\r\n    xPercentage = (xdiff / (w.x/2)) * 100\r\n    dx = ((degreeLimit*xPercentage)/100) *-1\r\n  }\r\n\r\n  //Corsor on right side of screen\r\n  if(x>w.x/2){\r\n    xdiff = x-w.x/2\r\n    xPercentage = (xdiff / (w.x/2)) *100\r\n    dx = (degreeLimit * xPercentage) / 100\r\n\r\n  }\r\n  return{x:dx}\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/iphone.f9dfe685.glb\";","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef, useMemo,  useState,useEffect } from 'react'\r\nimport { useGLTF } from '@react-three/drei/core/useGLTF'\r\nimport * as THREE from 'three'\r\nimport { useFrame, useThree } from 'react-three-fiber'\r\nimport {a, useSpring } from 'react-spring/three';\r\nimport CutePug from './CutePug';\r\nimport { getMouseDegrees } from './utils';\r\nimport iphone from '../assets/iphone.glb';\r\n\r\n\r\nexport default function Model({mouse, ...props}) {\r\n  \r\n  const cam = useRef()\r\n  const arobj = useRef()\r\n  const group = useRef()\r\n  const [isVisible, setIsVisible] =useState(false)\r\n  const [hovered, setHovered] = useState(false)\r\n\r\n  const {emissiveVal, opacityVal} = useSpring({\r\n    from: {emissiveVal: 0x000000, opacityVal: 0 },\r\n    to: {emissiveVal: isVisible ? 0xFF0000 : 0x000000, opacityVal: isVisible ? 0 : 0.4},\r\n    loop: {reverse: true}\r\n  });\r\n\r\n\r\n  const { nodes, materials } = useGLTF(iphone)\r\n  const {scene,gl} = useThree()\r\n  const [target] = useMemo(() => {\r\n    const target = new THREE.WebGLRenderTarget(90,180, {\r\n      format: THREE.RGBFormat,\r\n      stencilBuffer:false\r\n    })\r\n    return [target]\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    cam.current.updateProjectionMatrix()\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    //Take 0.5 second before the AR object appears\r\n\r\n    if (isVisible) {\r\n      let timeOut;\r\n      timeOut= setTimeout(() => {\r\n        arobj.current.visible = isVisible;\r\n      }, 500 )\r\n      return (() => clearTimeout(timeOut))\r\n    }else\r\n    { //AR object disappears immediately\r\n      arobj.current.visible = isVisible\r\n  \r\n    }\r\n\r\n  }, [isVisible])\r\n\r\n  useEffect(() => {\r\n    document.body.style.cursor = hovered ? 'pointer' : 'auto'\r\n  })\r\n\r\n  const Clicked = (e) => {\r\n    e.stopPropagation();\r\n    setIsVisible(!isVisible);\r\n    props.onClick();\r\n  }\r\n\r\n  const moveARObj = (mouse, obj, degreeLimit = 40 ) => {\r\n    let degrees = getMouseDegrees(mouse.current.x, degreeLimit)\r\n    obj.rotation.yD = THREE.MathUtils.lerp(obj.rotation.yD || 0, degrees.x, 0.1)\r\n    obj.rotation.y = THREE.Math.degToRad(obj.rotation.yD) - 0.7\r\n  }\r\n\r\n  useFrame(() => {\r\n    gl.setRenderTarget(target)\r\n    gl.render(scene, cam.current)\r\n    gl.setRenderTarget(null)    \r\n    if(isVisible){\r\n      moveARObj(mouse, arobj.current)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <a.group \r\n      ref={group}  \r\n      dispose={null} \r\n      position={props.pos} \r\n      rotation={props.rot} \r\n      onClick={Clicked} \r\n      onPointerOver = {() => setHovered(true)}\r\n      onPointerOut = {() => setHovered(false)}\r\n      >\r\n      {/* Add camera to capture what is behind the phone */}\r\n      <perspectiveCamera \r\n        fov={80} \r\n        aspect={0.5} \r\n        position={[0.45,0.9,-0.1]}\r\n        near={0.5}\r\n        far={25}\r\n        ref={cam}  />\r\n\r\n      {/* Add the AR object on top of the phone */}\r\n      <object3D \r\n        ref={arobj} \r\n        position={[0.2,1,0.22]}  \r\n        scale={[0.3,0.3,0.3]} \r\n        rotation={[Math.PI/2,-0.7,0]}>\r\n        <CutePug />\r\n      </object3D>\r\n      \r\n\r\n      <group position={[0.1, 1, -0.08]} rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\r\n        <group position={[24.8, -5.5, -98.56]}>\r\n          <mesh material={materials['schwarz glass']} geometry={nodes.Cube001.geometry} />\r\n          {/* Screen of the phone */}\r\n          <mesh position={[2.5,14.8,98.50]} rotation={[-Math.PI/2,0,0]}>\r\n            <planeBufferGeometry args={[90,180]} attach='geometry'/>\r\n            <meshStandardMaterial \r\n              map={target.texture} attach='material' \r\n              opacity={0.9} \r\n              metalness={0.6} \r\n              roughness={0}\r\n              />\r\n\r\n          </mesh>\r\n\r\n          {/* Mesh for flashing colours */}\r\n          <mesh \r\n            position={[2.5,8,98]} \r\n            rotation={[-Math.PI/2,0,0]}\r\n          >\r\n\r\n            <planeBufferGeometry \r\n              args={[130, 250]} \r\n              attach='geometry' />\r\n            <a.meshStandardMaterial\r\n              opacity={opacityVal}\r\n              transparent\r\n              emissive={emissiveVal}\r\n            />\r\n          </mesh>\r\n\r\n        </group>\r\n        <group position={[-113.54, 2.64, 124.1]}>\r\n          <group position={[0, 5.22, 0]}>\r\n            <mesh material={materials.Metallic} geometry={nodes.Mesh040.geometry} />\r\n            <mesh material={materials['schwarz glass']} geometry={nodes.Mesh040_1.geometry} />\r\n            <mesh material={materials['Mat.009']} geometry={nodes.Mesh040_2.geometry} />\r\n          </group>\r\n\r\n        </group>\r\n        <group position={[18.54, 2.64, 114.47]}>\r\n          <mesh\r\n            material={materials.Metallic}\r\n            geometry={nodes.Cylinder_12_2.geometry}\r\n            position={[-0.56, -1.27, -2.81]}\r\n          />\r\n          <mesh material={materials.Metallic} geometry={nodes.Extrude_5_3.geometry} position={[-132.08, 0, 9.63]}>\r\n            <mesh material={materials.Metallic} geometry={nodes.Cap_2_7.geometry} position={[131.55, -1.24, -11.18]} />\r\n          </mesh>\r\n        </group>\r\n        <group position={[39.09, 2.64, 114.47]}>\r\n          <mesh material={materials.Metallic} geometry={nodes.Cylinder_12.geometry} position={[-0.56, -1.27, -2.81]} />\r\n          <mesh material={materials.Metallic} geometry={nodes.Extrude_5_2.geometry} position={[-132.08, 0, 9.63]}>\r\n            <mesh material={materials.Metallic} geometry={nodes.Cap_2_6.geometry} position={[131.55, -1.24, -11.18]} />\r\n          </mesh>\r\n        </group>\r\n        <group position={[65.66, -9.77, -83.68]} rotation={[0, 0, -0.06]}>\r\n          <mesh material={materials['Mat.3']} geometry={nodes.Extrude.geometry} position={[-0.68, 3.41, 8.74]}>\r\n            <mesh\r\n              material={materials['Mat.4']}\r\n              geometry={nodes.Cap_1_3.geometry}\r\n              position={[0.28, 0.61, 1.54]}\r\n              rotation={[0, 0, -3.09]}\r\n            />\r\n            <mesh\r\n              material={materials['Mat.5']}\r\n              geometry={nodes.Cap_2_3.geometry}\r\n              position={[0.28, 0.61, 1.54]}\r\n              rotation={[0, 0, -3.09]}\r\n            />\r\n          </mesh>\r\n          <mesh material={materials['Mat.007']} geometry={nodes.Extrude_1.geometry} position={[-27.18, 15.8, -20.85]}>\r\n            <mesh\r\n              material={materials['Mat.7']}\r\n              geometry={nodes.Cap_1_4.geometry}\r\n              position={[0.18, 0.38, 1.95]}\r\n              rotation={[0, 0, -3.09]}\r\n            />\r\n            <mesh\r\n              material={materials['Mat.8']}\r\n              geometry={nodes.Cap_2_4.geometry}\r\n              position={[0.18, 0.38, 1.95]}\r\n              rotation={[0, 0, -3.09]}\r\n            />\r\n          </mesh>\r\n          <mesh material={materials.Mat} geometry={nodes.Extrude_5.geometry} position={[-0.68, 3.41, -14.33]}>\r\n            <mesh\r\n              material={materials['Mat.1']}\r\n              geometry={nodes.Cap_1_2.geometry}\r\n              position={[0.28, 0.61, 3.11]}\r\n              rotation={[0, 0, -3.09]}\r\n            />\r\n            <mesh\r\n              material={materials['Mat.2']}\r\n              geometry={nodes.Cap_2_2.geometry}\r\n              position={[0.28, 0.61, 3.11]}\r\n              rotation={[0, 0, -3.09]}\r\n            />\r\n          </mesh>\r\n          <mesh material={materials['Mat.6']} geometry={nodes.Extrude_7.geometry} position={[18.48, -67.19, 215.71]}>\r\n            <mesh\r\n              material={materials['Mat.6']}\r\n              geometry={nodes.Cap_1.geometry}\r\n              position={[-19.02, 70.3, -216.12]}\r\n              rotation={[0, 0, -3.07]}\r\n            />\r\n            <mesh\r\n              material={materials['Mat.6']}\r\n              geometry={nodes.Cap_2.geometry}\r\n              position={[-19.02, 70.3, -216.12]}\r\n              rotation={[0, 0, -3.07]}\r\n            />\r\n          </mesh>\r\n        </group>\r\n        <mesh material={materials.Metallic} geometry={nodes.Extrude_1_2.geometry} position={[-19.17, 2.64, -34.69]}>\r\n          <mesh material={materials.Metallic} geometry={nodes.Cap_2_10.geometry} position={[-8.06, -1.55, -1.87]} />\r\n          <mesh material={materials.Metallic} geometry={nodes.Rounding_4.geometry} position={[-8.06, -1.55, -1.87]}>\r\n            <mesh material={materials.Metallic} geometry={nodes.Cap_1_10.geometry} />\r\n          </mesh>\r\n        </mesh>\r\n        <mesh\r\n          material={materials['schwarz glass']}\r\n          geometry={nodes.Extrude_2.geometry}\r\n          position={[65.58, -5.83, -82.95]}>\r\n          <mesh\r\n            material={materials['schwarz glass']}\r\n            geometry={nodes.Cap_1_5.geometry}\r\n            position={[-0.37, 1.22, -1.19]}\r\n          />\r\n          <mesh\r\n            material={materials['schwarz glass']}\r\n            geometry={nodes.Rounding.geometry}\r\n            position={[-0.37, 1.22, -1.19]}>\r\n            <mesh material={materials['schwarz glass']} geometry={nodes.Cap_2_5.geometry} />\r\n          </mesh>\r\n        </mesh>\r\n        <mesh material={materials.Metallic} geometry={nodes.Extrude_2_2.geometry} position={[-19.17, 2.64, -55.64]}>\r\n          <mesh material={materials.Metallic} geometry={nodes.Cap_2_11.geometry} position={[-8.06, -1.55, -1.87]} />\r\n          <mesh material={materials.Metallic} geometry={nodes.Rounding_5.geometry} position={[-8.06, -1.55, -1.87]}>\r\n            <mesh material={materials.Metallic} geometry={nodes.Cap_1_11.geometry} />\r\n          </mesh>\r\n        </mesh>\r\n        <mesh material={materials.Metallic} geometry={nodes.Extrude_3.geometry} position={[-24.69, 2.64, -75.38]}>\r\n          <mesh material={materials.Metallic} geometry={nodes.Cap_2_9.geometry} position={[-2.8, -2.21, -1.87]} />\r\n          <mesh material={materials.Metallic} geometry={nodes.Rounding_3.geometry} position={[-2.8, -2.21, -1.87]}>\r\n            <mesh material={materials.Metallic} geometry={nodes.Cap_1_9.geometry} />\r\n          </mesh>\r\n        </mesh>\r\n        <mesh material={materials.Metallic} geometry={nodes.Extrude_4.geometry} position={[76.44, 2.64, -46.24]}>\r\n          <mesh material={materials.Metallic} geometry={nodes.Cap_1_8.geometry} position={[-10.58, -1.55, -1.87]} />\r\n          <mesh material={materials.Metallic} geometry={nodes.Rounding_2.geometry} position={[-10.58, -1.55, -1.87]}>\r\n            <mesh material={materials.Metallic} geometry={nodes.Cap_2_8.geometry} />\r\n          </mesh>\r\n        </mesh>\r\n        <mesh material={materials.Metallic} geometry={nodes.Sweep.geometry} position={[-113.54, 2.64, 124.1]} />\r\n      </group>\r\n    </a.group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload(iphone)\r\n","export default __webpack_public_path__ + \"static/media/wood.dbd4b830.jpg\";","export default __webpack_public_path__ + \"static/media/ar_pets.dd892f3c.svg\";","import React, {useMemo} from 'react'\r\nimport * as THREE from 'three'\r\nimport { useLoader,useResource } from 'react-three-fiber'\r\nimport woodImg from '../assets/wood.jpg'\r\nimport arQRCode from '../assets/ar_pets.svg'\r\n\r\nconst TableLeg = ({pos, textureMaterial, rot}) => {\r\n  return(\r\n    <mesh \r\n      material={textureMaterial} \r\n      position={pos}\r\n      rotation={rot}>\r\n      <cylinderBufferGeometry args={[0.3,0.2,6,12]}/>\r\n    </mesh>\r\n\r\n  )\r\n\r\n}\r\nconst Table = (props) => {\r\n  const radius = 1.00 //radius of table corner\r\n  const inner = 1.50 //distance of table leg from table edge\r\n  const le = 10.00 //table length\r\n\r\n  //Texture for the table top\r\n  const texture = useLoader(THREE.TextureLoader, woodImg)\r\n  if(texture){\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    texture.offset.set(-0.5, 0);\r\n    texture.repeat.set(0.1, 0.1);\r\n  }\r\n  const QRTexture = useLoader(THREE.TextureLoader, arQRCode)\r\n  const refMaterial = useResource()\r\n\r\n  const topXsection = useMemo(() => {\r\n    const topXsection = new THREE.Shape();\r\n    topXsection.moveTo(radius,0)\r\n    topXsection.lineTo(le-radius,0)\r\n    topXsection.absarc(le-radius,radius,radius,3*Math.PI/2, 0, false)\r\n    topXsection.lineTo(le,le-radius)\r\n    topXsection.absarc(le-radius, le-radius, radius,0, Math.PI/2, false )\r\n    topXsection.lineTo(radius,le)\r\n    topXsection.absarc(radius, le-radius, radius,Math.PI/2, Math.PI, false )\r\n    topXsection.lineTo(0,radius)\r\n    topXsection.absarc(radius, radius, radius, Math.PI, 3/2*Math.PI, false)\r\n    return topXsection\r\n  },[radius, le])\r\n  const extrudeSettings = {\r\n    bevelEnabled: false,\r\n    steps:2,\r\n    depth:0.5,\r\n  }\r\n  return (\r\n    <>\r\n      <group position={props.pos} rotation={props.rot}>\r\n        {/* Table top */}\r\n        <mesh>\r\n          <extrudeBufferGeometry attach=\"geometry\" args={[topXsection, extrudeSettings]}/>\r\n          <meshStandardMaterial attach= \"material\" ref={refMaterial} map={texture}/>\r\n        </mesh>\r\n         {/* Table leg */}\r\n         {[[inner, inner,-3], [le-inner, inner, -3],[le-inner,le-inner,-3], [inner,le-inner,-3]].map((pos,index) => <TableLeg \r\n          key={index}\r\n          pos={pos} \r\n          rot={[Math.PI/2,0,0]}\r\n          textureMaterial = {refMaterial.current}\r\n         />)}\r\n         {/* QR code */}\r\n         <mesh position={[inner,inner,0.501]}>\r\n          <planeGeometry args={[0.6,0.6]} />\r\n          <meshStandardMaterial map={QRTexture}  />\r\n         </mesh>\r\n      </group>\r\n    </>\r\n  )\r\n}\r\n\r\nTable.defaultProps  = {\r\n  pos:[0,0,0],\r\n  rot:[-Math.PI/2,0,0]\r\n}\r\n\r\nexport default Table\r\n","\r\nimport './App.css';\r\nimport Background from './components/Background'\r\nimport Model from './components/Iphone';\r\nimport Table from './components/Table';\r\nimport {useState, Suspense, useRef} from 'react';\r\nimport {Canvas, useFrame} from 'react-three-fiber';\r\nimport {useSpring} from 'react-spring/three';\r\nimport * as THREE from 'three';\r\nimport {getMousePos} from './components/utils';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [active, setActive] = useState(false);\r\n  const mouse=useRef({x:0, y:0})\r\n  const {position,rotation} = useSpring( {\r\n    position: active ? [1.05,1.5,-0.5] : [-1,3,0],\r\n    rotation: active ? [-Math.PI/2,0,0] : [0,0,0]\r\n  })\r\n\r\n  const changePosition = () => {\r\n    setActive(!active)\r\n  }\r\n\r\n  const MoveCamera = () => {\r\n\r\n    const dummy = new THREE.Vector3()\r\n    useFrame((state) => {\r\n      const step = 0.03\r\n      state.camera.fov = THREE.MathUtils.lerp(state.camera.fov, active ? 30 : 40, step)\r\n      state.camera.position.lerp(dummy.set(active ? -0.5 : -1, active ? 3 : 4.5, active ? 5 : 15), step)\r\n      state.camera.lookAt(dummy.set(active ? 0.8 : 2 ,active ? 1.5 : 0, active ? 0 : 0))\r\n      state.camera.updateProjectionMatrix()\r\n    })\r\n    return null\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Canvas \r\n        camera={{position: [-1,4.5,15], \r\n                fov:40}}\r\n        onMouseMove={(e) => (mouse.current = getMousePos(e))}\r\n      \r\n      >\r\n        <MoveCamera />\r\n        <ambientLight intensity={0.3}/>\r\n        <pointLight intensity={0.5} position={[1.5,3,5]} />\r\n        <Suspense fallback=\"loading\">      \r\n        <Background pos={[5,-6,-5]} rot={[-Math.PI/2, 0,0]}/>\r\n          <Model pos={position} rot={rotation} mouse={mouse} onClick={changePosition}/>\r\n          <Table />\r\n        </Suspense>\r\n        {/* <OrbitControls/> */}\r\n        {/* <axesHelper /> */}\r\n      </Canvas>  \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}