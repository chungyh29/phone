{"version":3,"sources":["components/Background.js","components/ArObj.js","components/utils.js","components/Iphone.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Background","rot","pos","floor1","useLoader","THREE","wrapS","wrapT","repeat","set","scene","useThree","color1","background","rotation","position","args","map","defaultProps","Math","PI","ArObj","props","group","useRef","useGLTF","nodes","materials","ref","dispose","geometry","mesh_0","material","material_14","mesh_1","material_13","mesh_2","material_12","mesh_3","material_11","mesh_4","material_10","mesh_5","material_9","mesh_6","material_8","mesh_7","material_7","mesh_8","material_6","mesh_9","material_5","mesh_10","material_4","mesh_11","mesh_12","defaultMat_0","mesh_13","defaultMat","mesh_14","material_3","mesh_15","material_2","mesh_16","material_1","mesh_17","material_0","preload","getMouseDegrees","x","degreeLimit","dx","w","window","innerWidth","Model","mouse","cam","arobj","useState","isVisible","setIsVisible","hovered","setHovered","useSpring","from","emissiveVal","opacityVal","to","loop","reverse","gl","useMemo","format","stencilBuffer","target","useFrame","setRenderTarget","render","current","moveARObj","useEffect","updateProjectionMatrix","timeOut","setTimeout","visible","clearTimeout","document","body","style","cursor","obj","degrees","yD","lerp","y","degToRad","onClick","e","stopPropagation","console","log","onPointerOver","onPointerOut","fov","aspect","near","far","scale","Cube001","attach","texture","opacity","metalness","roughness","meshStandardMaterial","transparent","emissive","Metallic","Mesh040","Mesh040_1","Mesh040_2","Cylinder_12_2","Extrude_5_3","Cap_2_7","Cylinder_12","Extrude_5_2","Cap_2_6","Extrude","Cap_1_3","Cap_2_3","Extrude_1","Cap_1_4","Cap_2_4","Mat","Extrude_5","Cap_1_2","Cap_2_2","Extrude_7","Cap_1","Cap_2","Extrude_1_2","Cap_2_10","Rounding_4","Cap_1_10","Extrude_2","Cap_1_5","Rounding","Cap_2_5","Extrude_2_2","Cap_2_11","Rounding_5","Cap_1_11","Extrude_3","Cap_2_9","Rounding_3","Cap_1_9","Extrude_4","Cap_1_8","Rounding_2","Cap_2_8","Sweep","TableLeg","textureMaterial","Table","inner","le","offset","QRTexture","refMaterial","useResource","topXsection","moveTo","lineTo","absarc","bevelEnabled","steps","depth","index","App","active","setActive","MoveCamera","dummy","state","camera","lookAt","onMouseMove","clientX","clientY","getMousePos","intensity","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ed539551.chunk.js","sourcesContent":["import React from 'react'\r\nimport * as THREE from 'three'\r\nimport {useLoader, useThree} from 'react-three-fiber'\r\n\r\nconst Background = ({rot,pos}) => {\r\n\r\n  const floor1 = useLoader(THREE.TextureLoader, '/textures/floor_wood.jpg')\r\n\r\n  if(floor1){\r\n      floor1.wrapS = THREE.RepeatWrapping;\r\n      floor1.wrapT = THREE.RepeatWrapping;\r\n      // floor1.offset.set(5, 5);\r\n      floor1.repeat.set(0.2, 3.5);\r\n  }\r\n  const{scene} = useThree();\r\n  const color1 = new THREE.Color('rgb(0,162,232)')\r\n  scene.background = color1;\r\n\r\n  return ( \r\n    <>\r\n      <mesh rotation={rot} position={pos}>\r\n        <planeGeometry args={[65,30]}/>\r\n        <meshStandardMaterial map={floor1}/>\r\n      </mesh>\r\n    </>\r\n  )\r\n}\r\n\r\nBackground.defaultProps = {\r\n  rot: [-Math.PI/2,0,0],\r\n  pos: [0,0,0]\r\n}\r\n\r\nexport default Background\r\n","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\nauthor: Sabrina Zakir (https://sketchfab.com/sabrinazakir123)\r\nlicense: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)\r\nsource: https://sketchfab.com/3d-models/cute-pug-waffles-39890591e199490c9a81a2360a68c1a7\r\ntitle: Cute Pug Waffles\r\n*/\r\n\r\nimport React, { useRef } from 'react'\r\nimport { useGLTF } from '@react-three/drei'\r\n\r\nexport default function ArObj(props) {\r\n  const group = useRef()\r\n  const { nodes, materials } = useGLTF('/cute_pug_waffles/scene.gltf')\r\n\r\n  // useFrame(() => {\r\n  //   gl.setRenderTarget(target)\r\n  //   gl.render(scene, cam.current)\r\n  //   gl.setRenderTarget(null)\r\n\r\n  // })\r\n  return (\r\n    <group ref={group} {...props} position={props.pos} dispose={null}>\r\n      <group rotation={[-Math.PI / 2, 0, 0]}>\r\n        <mesh geometry={nodes.mesh_0.geometry} material={materials.material_14} />\r\n        <mesh geometry={nodes.mesh_1.geometry} material={materials.material_13} />\r\n        <mesh geometry={nodes.mesh_2.geometry} material={materials.material_12} />\r\n        <mesh geometry={nodes.mesh_3.geometry} material={materials.material_11} />\r\n        <mesh geometry={nodes.mesh_4.geometry} material={materials.material_10} />\r\n        <mesh geometry={nodes.mesh_5.geometry} material={materials.material_9} />\r\n        <mesh geometry={nodes.mesh_6.geometry} material={materials.material_8} />\r\n        <mesh geometry={nodes.mesh_7.geometry} material={materials.material_7} />\r\n        <mesh geometry={nodes.mesh_8.geometry} material={materials.material_6} />\r\n        <mesh geometry={nodes.mesh_9.geometry} material={materials.material_5} />\r\n        <mesh geometry={nodes.mesh_10.geometry} material={materials.material_4} />\r\n        <mesh geometry={nodes.mesh_11.geometry} material={materials.material_4} />\r\n        <mesh geometry={nodes.mesh_12.geometry} material={materials.defaultMat_0} />\r\n        <mesh geometry={nodes.mesh_13.geometry} material={materials.defaultMat} />\r\n        <mesh geometry={nodes.mesh_14.geometry} material={materials.material_3} />\r\n        <mesh geometry={nodes.mesh_15.geometry} material={materials.material_2} />\r\n        <mesh geometry={nodes.mesh_16.geometry} material={materials.material_1} />\r\n        <mesh geometry={nodes.mesh_17.geometry} material={materials.material_0} />\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload('/cute_pug_waffles/scene.gltf')\r\n","\r\n\r\nexport const getMousePos = (e) => {\r\n  return ({x:e.clientX, y:e.clientY })\r\n}\r\n\r\nexport const getMouseDegrees = (x,degreeLimit) => {\r\n  let dx = 0,\r\n      xdiff,\r\n      xPercentage\r\n\r\n   let w = {x:window.innerWidth}\r\n\r\n  //ARObject rotates between 0 and (-)degreeLimit\r\n\r\n  //Cursor on left side of screen\r\n  if (x <= w.x/2) {\r\n    xdiff = w.x/2 - x\r\n    xPercentage = (xdiff / (w.x/2)) * 100\r\n    dx = ((degreeLimit*xPercentage)/100) *-1\r\n  }\r\n\r\n  //Corsor on right side of screen\r\n  if(x>w.x/2){\r\n    xdiff = x-w.x/2\r\n    xPercentage = (xdiff / (w.x/2)) *100\r\n    dx = (degreeLimit * xPercentage) / 100\r\n\r\n  }\r\n  return{x:dx}\r\n}\r\n\r\n","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef, useMemo,  useState,useEffect } from 'react'\r\nimport { useGLTF } from '@react-three/drei/core/useGLTF'\r\nimport * as THREE from 'three'\r\nimport { useFrame, useThree } from 'react-three-fiber'\r\nimport {a, useSpring } from 'react-spring/three';\r\nimport ArObj from './ArObj';\r\nimport { getMouseDegrees } from './utils';\r\n\r\n\r\nexport default function Model({mouse, ...props}) {\r\n  \r\n  const cam = useRef()\r\n  const arobj = useRef()\r\n  const group = useRef()\r\n  const [isVisible, setIsVisible] =useState(false)\r\n  const [hovered, setHovered] = useState(false)\r\n\r\n  const {emissiveVal, opacityVal} = useSpring({\r\n    from: {emissiveVal: 0x000000, opacityVal: 0 },\r\n    to: {emissiveVal: isVisible ? 0xFF0000 : 0x000000, opacityVal: isVisible ? 0 : 0.4},\r\n    // to: {emissiveVal:  0xFF0000 , opacityVal: 0.4},\r\n    loop: {reverse: true}\r\n  });\r\n\r\n\r\n  const { nodes, materials } = useGLTF('/iphone.glb')\r\n  const {scene,gl} = useThree()\r\n  const [target] = useMemo(() => {\r\n    const target = new THREE.WebGLRenderTarget(90,180, {\r\n      format: THREE.RGBFormat,\r\n      stencilBuffer:false\r\n    })\r\n    return [target]\r\n  },[])\r\n\r\n   \r\n\r\n  useFrame(() => {\r\n    gl.setRenderTarget(target)\r\n    gl.render(scene, cam.current)\r\n    gl.setRenderTarget(null)\r\n    if(isVisible){\r\n      moveARObj(mouse, arobj.current)\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    cam.current.updateProjectionMatrix()\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    //Take 0.5 second before the AR object appears\r\n\r\n    if (isVisible) {\r\n      let timeOut;\r\n      timeOut= setTimeout(() => {\r\n        arobj.current.visible = isVisible;\r\n      }, 500 )\r\n      return (() => clearTimeout(timeOut))\r\n    }else\r\n    { //AR object disappears immediately\r\n      arobj.current.visible = isVisible\r\n  \r\n    }\r\n  }, [isVisible])\r\n\r\n  useEffect(() => {\r\n    document.body.style.cursor = hovered ? 'pointer' : 'auto'\r\n  })\r\n\r\n  const Clicked = (e) => {\r\n    e.stopPropagation();\r\n    setIsVisible(!isVisible);\r\n    props.onClick();\r\n    console.log(isVisible)\r\n  }\r\n\r\n  const moveARObj = (mouse, obj, degreeLimit = 40 ) => {\r\n    let degrees = getMouseDegrees(mouse.current.x, degreeLimit)\r\n    obj.rotation.yD = THREE.MathUtils.lerp(obj.rotation.yD || 0, degrees.x, 0.1)\r\n    obj.rotation.y = THREE.Math.degToRad(obj.rotation.yD) - 0.7\r\n  }\r\n\r\n  return (\r\n    <a.group \r\n      ref={group}  \r\n      dispose={null} \r\n      position={props.pos} \r\n      rotation={props.rot} \r\n      onClick={Clicked} \r\n      onPointerOver = {() => setHovered(true)}\r\n      onPointerOut = {() => setHovered(false)}\r\n      >\r\n      {/* Add camera to capture what is behind the phone */}\r\n      <perspectiveCamera \r\n        fov={80} \r\n        aspect={0.5} \r\n        position={[0.45,0.9,-0.1]}\r\n        near={0.5}\r\n        far={25}\r\n        ref={cam}  />\r\n\r\n      {/* Add the AR object on top of the phone */}\r\n      <object3D \r\n        ref={arobj} \r\n        position={[0.2,1,0.22]}  \r\n        scale={[0.3,0.3,0.3]} \r\n        rotation={[Math.PI/2,-0.7,0]}>\r\n        <ArObj />\r\n      </object3D>\r\n      \r\n\r\n      <group position={[0.1, 1, -0.08]} rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\r\n        <group position={[24.8, -5.5, -98.56]}>\r\n          <mesh material={materials['schwarz glass']} geometry={nodes.Cube001.geometry} />\r\n          {/* Screen of the phone */}\r\n          <mesh position={[2.5,14.8,98.50]} rotation={[-Math.PI/2,0,0]}>\r\n            <planeBufferGeometry args={[90,180]} attach='geometry'/>\r\n            <meshStandardMaterial \r\n              map={target.texture} attach='material' \r\n              opacity={0.9} \r\n              metalness={0.6} \r\n              roughness={0}\r\n              />\r\n\r\n          </mesh>\r\n\r\n          {/* Mesh for flashing colours */}\r\n          <mesh \r\n            position={[2.5,8,98]} \r\n            rotation={[-Math.PI/2,0,0]}\r\n          >\r\n\r\n            <planeBufferGeometry \r\n              args={[130, 250]} \r\n              attach='geometry' />\r\n            <a.meshStandardMaterial\r\n              opacity={opacityVal}\r\n              transparent\r\n              emissive={emissiveVal}\r\n            />\r\n          </mesh>\r\n\r\n        </group>\r\n        <group position={[-113.54, 2.64, 124.1]}>\r\n          <group position={[0, 5.22, 0]}>\r\n            <mesh material={materials.Metallic} geometry={nodes.Mesh040.geometry} />\r\n            <mesh material={materials['schwarz glass']} geometry={nodes.Mesh040_1.geometry} />\r\n            <mesh material={materials['Mat.009']} geometry={nodes.Mesh040_2.geometry} />\r\n          </group>\r\n\r\n        </group>\r\n        <group position={[18.54, 2.64, 114.47]}>\r\n          <mesh\r\n            material={materials.Metallic}\r\n            geometry={nodes.Cylinder_12_2.geometry}\r\n            position={[-0.56, -1.27, -2.81]}\r\n          />\r\n          <mesh material={materials.Metallic} geometry={nodes.Extrude_5_3.geometry} position={[-132.08, 0, 9.63]}>\r\n            <mesh material={materials.Metallic} geometry={nodes.Cap_2_7.geometry} position={[131.55, -1.24, -11.18]} />\r\n          </mesh>\r\n        </group>\r\n        <group position={[39.09, 2.64, 114.47]}>\r\n          <mesh material={materials.Metallic} geometry={nodes.Cylinder_12.geometry} position={[-0.56, -1.27, -2.81]} />\r\n          <mesh material={materials.Metallic} geometry={nodes.Extrude_5_2.geometry} position={[-132.08, 0, 9.63]}>\r\n            <mesh material={materials.Metallic} geometry={nodes.Cap_2_6.geometry} position={[131.55, -1.24, -11.18]} />\r\n          </mesh>\r\n        </group>\r\n        <group position={[65.66, -9.77, -83.68]} rotation={[0, 0, -0.06]}>\r\n          <mesh material={materials['Mat.3']} geometry={nodes.Extrude.geometry} position={[-0.68, 3.41, 8.74]}>\r\n            <mesh\r\n              material={materials['Mat.4']}\r\n              geometry={nodes.Cap_1_3.geometry}\r\n              position={[0.28, 0.61, 1.54]}\r\n              rotation={[0, 0, -3.09]}\r\n            />\r\n            <mesh\r\n              material={materials['Mat.5']}\r\n              geometry={nodes.Cap_2_3.geometry}\r\n              position={[0.28, 0.61, 1.54]}\r\n              rotation={[0, 0, -3.09]}\r\n            />\r\n          </mesh>\r\n          <mesh material={materials['Mat.007']} geometry={nodes.Extrude_1.geometry} position={[-27.18, 15.8, -20.85]}>\r\n            <mesh\r\n              material={materials['Mat.7']}\r\n              geometry={nodes.Cap_1_4.geometry}\r\n              position={[0.18, 0.38, 1.95]}\r\n              rotation={[0, 0, -3.09]}\r\n            />\r\n            <mesh\r\n              material={materials['Mat.8']}\r\n              geometry={nodes.Cap_2_4.geometry}\r\n              position={[0.18, 0.38, 1.95]}\r\n              rotation={[0, 0, -3.09]}\r\n            />\r\n          </mesh>\r\n          <mesh material={materials.Mat} geometry={nodes.Extrude_5.geometry} position={[-0.68, 3.41, -14.33]}>\r\n            <mesh\r\n              material={materials['Mat.1']}\r\n              geometry={nodes.Cap_1_2.geometry}\r\n              position={[0.28, 0.61, 3.11]}\r\n              rotation={[0, 0, -3.09]}\r\n            />\r\n            <mesh\r\n              material={materials['Mat.2']}\r\n              geometry={nodes.Cap_2_2.geometry}\r\n              position={[0.28, 0.61, 3.11]}\r\n              rotation={[0, 0, -3.09]}\r\n            />\r\n          </mesh>\r\n          <mesh material={materials['Mat.6']} geometry={nodes.Extrude_7.geometry} position={[18.48, -67.19, 215.71]}>\r\n            <mesh\r\n              material={materials['Mat.6']}\r\n              geometry={nodes.Cap_1.geometry}\r\n              position={[-19.02, 70.3, -216.12]}\r\n              rotation={[0, 0, -3.07]}\r\n            />\r\n            <mesh\r\n              material={materials['Mat.6']}\r\n              geometry={nodes.Cap_2.geometry}\r\n              position={[-19.02, 70.3, -216.12]}\r\n              rotation={[0, 0, -3.07]}\r\n            />\r\n          </mesh>\r\n        </group>\r\n        <mesh material={materials.Metallic} geometry={nodes.Extrude_1_2.geometry} position={[-19.17, 2.64, -34.69]}>\r\n          <mesh material={materials.Metallic} geometry={nodes.Cap_2_10.geometry} position={[-8.06, -1.55, -1.87]} />\r\n          <mesh material={materials.Metallic} geometry={nodes.Rounding_4.geometry} position={[-8.06, -1.55, -1.87]}>\r\n            <mesh material={materials.Metallic} geometry={nodes.Cap_1_10.geometry} />\r\n          </mesh>\r\n        </mesh>\r\n        <mesh\r\n          material={materials['schwarz glass']}\r\n          geometry={nodes.Extrude_2.geometry}\r\n          position={[65.58, -5.83, -82.95]}>\r\n          <mesh\r\n            material={materials['schwarz glass']}\r\n            geometry={nodes.Cap_1_5.geometry}\r\n            position={[-0.37, 1.22, -1.19]}\r\n          />\r\n          <mesh\r\n            material={materials['schwarz glass']}\r\n            geometry={nodes.Rounding.geometry}\r\n            position={[-0.37, 1.22, -1.19]}>\r\n            <mesh material={materials['schwarz glass']} geometry={nodes.Cap_2_5.geometry} />\r\n          </mesh>\r\n        </mesh>\r\n        <mesh material={materials.Metallic} geometry={nodes.Extrude_2_2.geometry} position={[-19.17, 2.64, -55.64]}>\r\n          <mesh material={materials.Metallic} geometry={nodes.Cap_2_11.geometry} position={[-8.06, -1.55, -1.87]} />\r\n          <mesh material={materials.Metallic} geometry={nodes.Rounding_5.geometry} position={[-8.06, -1.55, -1.87]}>\r\n            <mesh material={materials.Metallic} geometry={nodes.Cap_1_11.geometry} />\r\n          </mesh>\r\n        </mesh>\r\n        <mesh material={materials.Metallic} geometry={nodes.Extrude_3.geometry} position={[-24.69, 2.64, -75.38]}>\r\n          <mesh material={materials.Metallic} geometry={nodes.Cap_2_9.geometry} position={[-2.8, -2.21, -1.87]} />\r\n          <mesh material={materials.Metallic} geometry={nodes.Rounding_3.geometry} position={[-2.8, -2.21, -1.87]}>\r\n            <mesh material={materials.Metallic} geometry={nodes.Cap_1_9.geometry} />\r\n          </mesh>\r\n        </mesh>\r\n        <mesh material={materials.Metallic} geometry={nodes.Extrude_4.geometry} position={[76.44, 2.64, -46.24]}>\r\n          <mesh material={materials.Metallic} geometry={nodes.Cap_1_8.geometry} position={[-10.58, -1.55, -1.87]} />\r\n          <mesh material={materials.Metallic} geometry={nodes.Rounding_2.geometry} position={[-10.58, -1.55, -1.87]}>\r\n            <mesh material={materials.Metallic} geometry={nodes.Cap_2_8.geometry} />\r\n          </mesh>\r\n        </mesh>\r\n        <mesh material={materials.Metallic} geometry={nodes.Sweep.geometry} position={[-113.54, 2.64, 124.1]} />\r\n      </group>\r\n    </a.group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload('/iphone.glb')\r\n","import React, {useMemo} from 'react'\r\nimport * as THREE from 'three'\r\nimport { useLoader,useResource } from 'react-three-fiber'\r\n\r\nconst TableLeg = ({pos, textureMaterial, rot}) => {\r\n  return(\r\n    <mesh \r\n      material={textureMaterial} \r\n      position={pos}\r\n      rotation={rot}>\r\n      <cylinderBufferGeometry args={[0.3,0.2,6,12]}/>\r\n    </mesh>\r\n\r\n  )\r\n\r\n}\r\nconst Table = (props) => {\r\n  const radius = 1.00 //radius of table corner\r\n  const inner = 1.50 //distance of table leg from table edge\r\n  const le = 10.00 //table length\r\n\r\n  //Texture for the table top\r\n  const texture = useLoader(THREE.TextureLoader, '/textures/wood.jpg')\r\n  if(texture){\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    texture.offset.set(-0.5, 0);\r\n    texture.repeat.set(0.1, 0.1);\r\n  }\r\n  const QRTexture = useLoader(THREE.TextureLoader, '/textures/ar_pets.svg')\r\n  const refMaterial = useResource()\r\n\r\n  const topXsection = useMemo(() => {\r\n    const topXsection = new THREE.Shape();\r\n    topXsection.moveTo(radius,0)\r\n    topXsection.lineTo(le-radius,0)\r\n    topXsection.absarc(le-radius,radius,radius,3*Math.PI/2, 0, false)\r\n    topXsection.lineTo(le,le-radius)\r\n    topXsection.absarc(le-radius, le-radius, radius,0, Math.PI/2, false )\r\n    topXsection.lineTo(radius,le)\r\n    topXsection.absarc(radius, le-radius, radius,Math.PI/2, Math.PI, false )\r\n    topXsection.lineTo(0,radius)\r\n    topXsection.absarc(radius, radius, radius, Math.PI, 3/2*Math.PI, false)\r\n    return topXsection\r\n  })\r\n  const extrudeSettings = {\r\n    bevelEnabled: false,\r\n    steps:2,\r\n    depth:0.5,\r\n  }\r\n  return (\r\n    <>\r\n      <group position={props.pos} rotation={props.rot}>\r\n        {/* Table top */}\r\n        <mesh>\r\n          <extrudeBufferGeometry attach=\"geometry\" args={[topXsection, extrudeSettings]}/>\r\n          <meshStandardMaterial attach= \"material\" ref={refMaterial} map={texture}/>\r\n        </mesh>\r\n         {/* Table leg */}\r\n         {[[inner, inner,-3], [le-inner, inner, -3],[le-inner,le-inner,-3], [inner,le-inner,-3]].map((pos,index) => <TableLeg \r\n          key={index}\r\n          pos={pos} \r\n          rot={[Math.PI/2,0,0]}\r\n          textureMaterial = {refMaterial.current}\r\n         />)}\r\n         {/* QR code */}\r\n         <mesh position={[inner,inner,0.501]}>\r\n          <planeGeometry args={[0.6,0.6]} />\r\n          <meshStandardMaterial map={QRTexture}  />\r\n         </mesh>\r\n      </group>\r\n    </>\r\n  )\r\n}\r\n\r\nTable.defaultProps  = {\r\n  pos:[0,0,0],\r\n  rot:[-Math.PI/2,0,0]\r\n}\r\n\r\nexport default Table\r\n","\r\nimport './App.css';\r\nimport Background from './components/Background'\r\nimport Model from './components/Iphone';\r\nimport Table from './components/Table';\r\nimport {useState, Suspense, useRef} from 'react';\r\nimport {Canvas, useFrame} from 'react-three-fiber';\r\nimport {useSpring} from 'react-spring/three';\r\nimport * as THREE from 'three';\r\nimport {getMousePos} from './components/utils';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [active, setActive] = useState(false);\r\n  const mouse=useRef({x:0, y:0})\r\n  const {position,rotation} = useSpring( {\r\n    position: active ? [1.05,1.5,-0.5] : [-1,3,0],\r\n    rotation: active ? [-Math.PI/2,0,0] : [0,0,0]\r\n  })\r\n\r\n  const changePosition = () => {\r\n    setActive(!active)\r\n  }\r\n\r\n  const MoveCamera = () => {\r\n\r\n    const dummy = new THREE.Vector3()\r\n    useFrame((state) => {\r\n      const step = 0.03\r\n      state.camera.fov = THREE.MathUtils.lerp(state.camera.fov, active ? 30 : 40, step)\r\n      state.camera.position.lerp(dummy.set(active ? -0.5 : -1, active ? 3 : 4.5, active ? 5 : 15), step)\r\n      state.camera.lookAt(dummy.set(active ? 0.8 : 2 ,active ? 1.5 : 0, active ? 0 : 0))\r\n      state.camera.updateProjectionMatrix()\r\n    })\r\n    return null\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Canvas \r\n        camera={{position: [-1,4.5,15], \r\n                fov:40}}\r\n        onMouseMove={(e) => (mouse.current = getMousePos(e))}\r\n      \r\n      >\r\n        <MoveCamera />\r\n        <ambientLight intensity={0.3}/>\r\n        <pointLight intensity={0.5} position={[1.5,3,5]} />\r\n        <Suspense fallback=\"loading\">      \r\n        <Background pos={[5,-6,-5]} rot={[-Math.PI/2, 0,0]}/>\r\n          <Model pos={position} rot={rotation} mouse={mouse} onClick={changePosition}/>\r\n          <Table />\r\n        </Suspense>\r\n        {/* <OrbitControls/> */}\r\n        {/* <axesHelper /> */}\r\n      </Canvas>  \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}